{#
/*
 *  Copyright 2010 - 2024, Cake Development Corporation (https://www.cakedc.com)
 *
 *  Licensed under The MIT License
 *  Redistributions of files must retain the above copyright notice.
 *
 *  @copyright Copyright 2010 - 2024, Cake Development Corporation (https://www.cakedc.com)
 *  @license MIT License (http://www.opensource.org/licenses/mit-license.php)
 */
#}
<script setup>
    import { Link } from '@inertiajs/vue3'
    import Layout from '../Layout'
    import { onMounted, onUnmounted, ref } from 'vue'
    import moment from 'moment'

    const props = defineProps({
        csrfToken: String,
        flash: [],
        {{ pluralVar }}: [],
        sort: String,
        direction: String,
        links: [],
    })

    const direction = ref(0)

    const defaultClass = Object ({
        id: '',
        name: '',
    })

    function formatDate(date) {
        return moment(date).format("YYYY-MM-DD")
    }

    function changeDirection(p) {
        if (direction === 'desc') {
            return 'asc';
        } else {
            return 'desc';
        }
    }

    onMounted(() => {
        console.log('Component {{ pluralVar }}/{{ action }} onMounted hook called')
    })

</script>

<template>
    <Layout>
        <div class="column-responsive column-80">
            {%- if prefix == '' %}
                {% set baseUrl = '/' %}
            {%- else %}
                {% set baseUrl = '/' ~ prefix|lower ~ '/' %}
            {%- endif %}
            {%- set vueVar = "{{ flash['message'] }}" %}
            {{- "\n" }}
            <div onclick="this.classList.add('hidden')" :class="[(flash['element'] === undefined) ? 'hidden' : '','message', (flash['element'] === 'flash-success' ? 'success' : 'error')]">{{ vueVar }}</div>
            <div class="{{ pluralVar }} index content">
                <h3>{{ pluralHumanName }}</h3>
                {{- "\n" }}
                {%- if prefix == '' %}
                <Link as="button" href="/{{ pluralVar }}/add" class="button shadow radius right small">Add {{ singularHumanName }}</Link>
                {%- else %}
                <Link as="button" href="/{{ prefix|lower }}/{{ pluralVar }}/add" class="button shadow radius right small">Add {{ singularHumanName }}</Link>
                {%- endif %}
                {%- set fields = Bake.filterFields(fields, schema, modelObject, indexColumns, ['binary', 'text']) %}
                {{ "\n" }}
                <div class="table-responsive">
                    <table>
                        <thead>
                            <tr>

                                {%- for field in fields %}
                                    {{- "\n" }}
                                <th scope="col">
                                    <Link href="{{ baseUrl }}{{ pluralVar }}/index" :class="defaultClass.{{ field }}" :data="{ sort: '{{ field }}', direction: changeDirection }">{{ field|capitalize }}</Link>
                                </th>
                                {%- endfor %}
                                {{- "\n" }}
                                <th class="actions">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="{{ singularVar }} in {{ pluralVar }}">
                                {%- for field in fields %}
                                    {%- set isKey = false %}
                                    {%- if associations.BelongsTo is defined %}
                                        {%- for alias, details in associations.BelongsTo %}
                                            {%- if field == details.foreignKey %}
                                                {%- set isKey = true %}
                                                {%- set vueVarParent = singularVar ~ "." ~  details.property %}
                                                {%- set vueVar = "{{" ~ singularVar ~ "." ~ details.property ~ "." ~ details.displayField  ~ "}}" %}
                                                {%- set vueVarIndex = singularVar ~ "." ~ details.property ~ "." ~ details.primaryKey[0] %}
                                <td>
                                    <span v-if="{{ vueVarParent }}">
                                        <Link as="button" class=""  :href="'{{ baseUrl }}{{ details.controller|lower }}/view/' + {{ vueVarIndex }}">{{ vueVar }}</Link>
                                    </span>
                                </td>
                                            {%- endif %}
                                        {%- endfor %}
                                    {%- endif %}

                                    {{- "\n" }}
                                    {%- if isKey is not same as(true) %}
                                        {%- set columnData = Bake.columnData(field, schema) %}
                                        {%- if columnData.type not in ['integer', 'float', 'decimal', 'biginteger', 'smallinteger', 'tinyinteger', 'timestampfractional'] %}
                                <td>
                                    {#  todo: need trucnate #}
                                    {%- set vueVar = "{{" ~ singularVar ~ "." ~ field ~ "}}" %}
                                    {{- vueVar }}
                                </td>
                                        {%- elseif columnData.type == 'timestampfractional' %}
                                <td>
                                    {%- set vueVar = "{{ formatDate(" ~ singularVar ~ "." ~ field ~ ") }}" %}
                                    {{- vueVar }}</td>
                                        {%- elseif columnData.null %}
                                            {#  todo: need check vueVar === null #}
                                <td>4
                                    {%- set vueVar = "{{" ~ singularVar ~ "." ~ field ~ "}}" %}
                                    {{- vueVar }}
                                </td>
                                        {%- else %}
                                <td>
                                    {%- set vueVar = "{{" ~ singularVar ~ "." ~ field ~ "}}" %}
                                    {{- vueVar }}</td>
                                        {%- endif %}
                                    {%- endif %}
                            {%- endfor %}
                                {{- "\n" }}
                                <td class="actions">
                                    <Link as="button" method="get" :href="'{{ baseUrl }}{{ pluralVar }}/view/' + {{ singularVar }}.id">View</Link>
                                    <Link as="button" method="get" :href="'{{ baseUrl }}{{ pluralVar }}/edit/' + {{ singularVar }}.id">Edit</Link>
                                    <Link as="button" :data="{ csrfToken:csrfToken }"  method="get" :href="'{{ baseUrl }}{{ pluralVar }}/delete/' + {{ singularVar }}.id">Delete</Link>
                                </td>
                            </tr>
                       </tbody>
                   </table>
                </div>
           </div>
           <span v-if="links.length > 1">
               <div class="paginator">
                   <ul class="pagination">
                       <template v-for="(link, key) in links">
                           <li>
                               {% set vueLabel = "{{ link.label }}" %}
    <Link as="button" :key="key" class="" :href="link.url">{{ vueLabel }}</Link>
                           </li>
                       </template>
                   </ul>
               </div>
           </span>
        </div>
    </Layout>
</template>