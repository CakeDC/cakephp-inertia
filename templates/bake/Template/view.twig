{% set associations = {'BelongsTo': [], 'HasOne': [], 'HasMany': [], 'BelongsToMany': []}|merge(associations) %}
{% set fieldsData = Bake.getViewFieldsData(fields, schema, associations) %}
{% set associationFields = fieldsData.associationFields %}
{% set groupedFields = fieldsData.groupedFields %}
{% set pK = '$' ~ singularVar ~ '->' ~ primaryKey[0] %}
{% if prefix == '' %}
    {% set baseUrl = '/' %}
{% else %}
    {% set baseUrl = '/' ~ prefix|lower ~ '/' %}
{% endif %}
<template>
    <div class="column-responsive column-80">
        <div class="{{ pluralVar }} view content">
{% set vueLabel = "{{" ~ singularVar ~ "." ~  displayField ~ "}}" %}
            <h3>{{ vueLabel }}</h3>
            <table>
                {% if groupedFields['string'] %}
                    {% for field in groupedFields['string'] %}
                        {% if associationFields[field] is defined %}
                            {% set details = associationFields[field] %}
                            <tr>
                                <th>{{ field|humanize }}</th>
                                <td>
                                       {% set vueVarParent = singularVar ~ "." ~  details.property %}
                                       {% set vueVar = "{{" ~ singularVar ~ "." ~ details.property ~ "." ~ details.displayField  ~ "}}" %}
                                       {% set vueVarIndex = singularVar ~ "." ~ details.property ~ "." ~ details.primaryKey[0] %}
                                       <span v-if="{{ vueVarParent }}">
                                            <InertiaLink as="button" class=""  :href="'{{ baseUrl }}{{ details.controller|lower }}/view/' + {{ vueVarIndex }}">{{ vueVar }}</InertiaLink>
                                       </span>
                                </td>
                            </tr>
                        {% else %}
                            <tr>
                                <th>{{ field|humanize }}</th>
                                {% set vueValue = "{{" ~ singularVar ~ "." ~  field ~ "}}" %}
                                <td>{{ vueValue }}</td>
                            </tr>
                        {% endif %}
                    {% endfor %}
                {% endif %}
                {% if groupedFields.number %}
                    {% for field in groupedFields.number %}
                        <tr>
                            <th>{{ field|humanize }}</th>
                            <td>
                                {% set vueVar = "{{" ~ singularVar ~ "." ~ field ~ "}}" %}
                                {{ vueVar }}
                            </td>
                        </tr>
                    {% endfor %}
                {% endif %}
                {% if groupedFields.date %}
                    {% for field in groupedFields.date %}
                        <tr>
                            <th>{{ field|humanize }}</th>
                            <td>
                                {% set vueVar = "{{ formatDate(" ~ singularVar ~ "." ~ field ~ ") }}" %}
                                {{ vueVar }}
                            </td>
                        </tr>
                    {% endfor %}
                {% endif %}
            </table>
            {% if groupedFields.text %}
                {% for field in groupedFields.text %}
                    <div class="text">
                        <strong>{{ field|humanize }}</strong>
                        <blockquote>
                            {% set vueVar = singularVar ~ "." ~ field %}
                            <span v-html="{{ vueVar }}"></span>
                        </blockquote>
                    </div>
                {% endfor %}
            {% endif %}
            {% set relations = associations.BelongsToMany|merge(associations.HasMany) %}
            {% for alias, details in relations %}
                {% set otherSingularVar = alias|variable %}
                {% set otherPluralHumanName = details.controller|underscore|humanize %}
                <div class="related">
                    <h4>{{ otherPluralHumanName }}</h4>
                    <span v-if="{{ singularVar }}.{{ details.property }} && {{ singularVar }}.{{ details.property }}.length != 0">
                        <div class="table-responsive">
                            <table>
                                <tr>
                                    {% for field in details.fields %}
                                        <th>{{ field|humanize }}</th>
                                    {% endfor %}
                                    <th class="actions">Actions</th>
                                </tr>
                                <tr v-for="{{ otherSingularVar }} in {{ singularVar }}.{{ details.property }}">
                                    {% for field in details.fields %}
                                        {% set vueValue = "{{" ~ otherSingularVar ~ "." ~  field ~ "}}" %}
                                        <td>{{ vueValue }}</td>
                                    {% endfor %}
                                    {% set otherPk = otherSingularVar ~ '.' ~ details.primaryKey[0] %}
                                    <td class="actions">
                                        <InertiaLink as="button" :href="'{{ baseUrl }}{{ otherSingularVar }}/view/' + {{ otherPk }}">View</InertiaLink>
                                        <InertiaLink as="button" :href="'{{ baseUrl }}{{ otherSingularVar }}/edit/' + {{ otherPk }}">Edit</InertiaLink>
                                        <InertiaLink as="button" method="post" :href="'{{ baseUrl }}{{ otherSingularVar }}/delete/' + {{ otherPk }}">Delete</InertiaLink>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </span>
                </div>
            {% endfor %}
        </div>
    </div>
</template>


<script>
import Layout from '@/Components/Layout'
import moment from 'moment'
export default {
    components: {
    },
    props: {
        menuOptions: [],
        _csrfToken: String,
        {{ singularVar }}: [],
    },
    data() {
        return {
            currentRoute: '{{ baseUrl }}{{ pluralVar }}/view',
            defaultClass: {
            {% for field in fields %}
                {%- if field not in primaryKey %}
                    {{field}}: '', {{- "\n" }}
                {%- endif %}
            {%- endfor %}
            }
        };
    },
    computed: {
    },
    methods: {
        formatDate(date) {
            return moment(date).format("YYYY-MM-DD")
        }
    },
    mounted() {
    },
    layout: Layout
}
</script>
